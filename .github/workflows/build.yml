on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: setup Go
        uses: actions/setup-go@v5
        env:
          GO111MODULE: "on"
        with:
          go-version: '1.21'
          cache: false

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4

      - run: make style
      - run: make vet
      - run: make test
      - run: make build
      # - name: Setup Debug Session
      #   uses: csexton/debugger-action@master
      - run: make integ

  image:
    runs-on: ubuntu-latest
    steps:

      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJson(github) }}
      #   run: echo "$GITHUB_CONTEXT"

      - name: setup buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: login to docker hub
        env:
          USER_NAME: ${{ secrets.DOCKER_USERNAME }}
        if: ${{ env.USER_NAME != '' && github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/checkout@master

      - name: generate docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            zhangguanzhang/process-exporter
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{raw}}
#            type=sha
# https://github.com/docker/metadata-action?tab=readme-ov-file#typesemver

      - name: build docker image and, if not PR, push
        uses: docker/build-push-action@v5
        env:
          USER_NAME: ${{ secrets.DOCKER_USERNAME }}
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
          push: ${{ env.USER_NAME != '' && github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: ${{ github.event_name == 'pull_request' }}

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
